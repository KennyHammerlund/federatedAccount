{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/graphs/application/resolvers.js","webpack:///./src/graphs/delay/resolvers.js","webpack:///./src/graphs/game/resolvers.js","webpack:///./src/graphs/resolvers.js","webpack:///./src/index.js","webpack:///./src/server.js","webpack:///./src/utils/firebase.js","webpack:///external \"apollo-server\"","webpack:///external \"babel-runtime/core-js/object/keys\"","webpack:///external \"babel-runtime/core-js/promise\"","webpack:///external \"babel-runtime/helpers/asyncToGenerator\"","webpack:///external \"babel-runtime/helpers/extends\"","webpack:///external \"babel-runtime/regenerator\"","webpack:///external \"firebase\"","webpack:///external \"firebase-admin\"","webpack:///external \"firebase/database\"","webpack:///external \"graphql-import\"","webpack:///external \"lodash\""],"names":["Query","summitUpload","obj","ctx","input","online","delay","docRef","db","ref","once","then","snap","val","Mutation","setDelay","set","application","game","id","delayRef","console","log","res","rej","child","snapVal","keys","filter","k","name","actionIds","gameId","games","map","key","Game","actions","gameArr","includes","action","addGameAction","value","type","push","gameRef","addGame","newItem","typeDefs","importSchema","PORT","server","ApolloServer","resolvers","_","reduce","prev","next","merge","listen","port","url","firebase","initializeApp","settings","database"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","export default {\n  Query: {\n    summitUpload: async (obj, { input }, ctx) => {\n      return {\n        online: true\n      };\n    }\n  }\n};\n","import db from \"../../utils/firebase\";\n\nexport default {\n  Query: {\n    delay: obj => {\n      let docRef = db.ref(\"delay\");\n      return docRef.once(\"value\").then(snap => snap.val());\n    }\n  },\n  Mutation: {\n    setDelay: (obj, { delay }) => {\n      let docRef = db.ref(\"delay\");\n      docRef.set(delay);\n      return delay;\n    }\n  }\n};\n","import db from \"../../utils/firebase\";\n\nexport default {\n  Query: {\n    application: async (obj, { input }, ctx) => {\n      return {\n        online: true\n      };\n    },\n    game: async (obj, { id }) => {\n      const delayRef = db.ref(\"delay\");\n      const delay = await delayRef.once(\"value\").then(snap => snap.val());\n      console.log(`*--delay`, delay);\n      return new Promise((res, rej) => {\n        const ref = db.ref(\"games\").child(id);\n        ref.once(\"value\").then(snap => {\n          const snapVal = snap.val();\n          const keys = Object.keys(snapVal).filter(k => k !== \"name\");\n          res({ name: snapVal.name, actionIds: keys, gameId: id });\n        });\n      });\n    },\n    games: obj => {\n      const ref = db.ref(\"games\");\n      return ref.once(\"value\").then(snap => {\n        const snapVal = snap.val();\n        return Object.keys(snapVal).map(key => ({\n          id: key,\n          ...snapVal[key]\n        }));\n      });\n    }\n  },\n  Game: {\n    actions: obj => {\n      if (!obj.actionIds) return null;\n      const ref = db.ref(\"games\").child(obj.gameId);\n      return ref.once(\"value\").then(snap => {\n        const snapVal = snap.val();\n        const gameArr = Object.keys(snapVal).map(key => ({\n          id: key,\n          ...snapVal[key]\n        }));\n\n        return gameArr.filter(action => obj.actionIds.includes(action.id));\n      });\n    }\n  },\n  Mutation: {\n    addGameAction: (obj, { input }) => {\n      const { value, type, game } = input;\n      let docRef = db.ref(\"games\");\n      if (game) {\n        docRef.child(game).push({\n          type,\n          value\n        });\n      } else {\n        const gameRef = docRef.push();\n        gameRef.push({\n          type,\n          value\n        });\n      }\n    },\n    addGame: (obj, { input }) => {\n      let docRef = db.ref(\"games\");\n      const newItem = docRef.push({\n        name: input.name\n      });\n\n      return {\n        name: input.name,\n        id: newItem.key\n      };\n    }\n  }\n};\n","export { default as game } from \"./game/resolvers\";\nexport { default as application } from \"./application/resolvers\";\nexport { default as delay } from \"./delay/resolvers\";\n","import server from './server'","import { importSchema } from \"graphql-import\";\nimport { ApolloServer, gql } from \"apollo-server\";\nimport _ from \"lodash\";\n\nimport * as resolvers from \"./graphs/resolvers\";\n\nconst typeDefs = importSchema(\"./src/graphs/schema.graphql\");\n\n// not required but can be useful if you run multiple servers.\nconst PORT = 2999;\n\nconst server = new ApolloServer({\n  typeDefs,\n  resolvers: _.reduce(resolvers, (prev, next) => _.merge(prev, next))\n});\n\n// Start accepting connections.\nserver.listen({ port: PORT }).then(({ url }) => {\n  console.log(`🚀 Apollo server running on port ${url}`);\n});\n","import admin from \"firebase-admin\";\nimport settings from \"../../settings.json\";\nimport \"firebase/database\";\nimport firebase from \"firebase\";\n\nfirebase.initializeApp(settings.firebase);\n\nexport default firebase.database();\n","module.exports = require(\"apollo-server\");","module.exports = require(\"babel-runtime/core-js/object/keys\");","module.exports = require(\"babel-runtime/core-js/promise\");","module.exports = require(\"babel-runtime/helpers/asyncToGenerator\");","module.exports = require(\"babel-runtime/helpers/extends\");","module.exports = require(\"babel-runtime/regenerator\");","module.exports = require(\"firebase\");","module.exports = require(\"firebase-admin\");","module.exports = require(\"firebase/database\");","module.exports = require(\"graphql-import\");","module.exports = require(\"lodash\");"],"sourceRoot":""}